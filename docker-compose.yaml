version: "3.7"
services:
  db:
    image: ghcr.io/getzep/postgres:latest
    container_name: zep-postgres
    restart: on-failure
    shm_size: "128mb"  # Increase this if vacuuming fails with a "no space left on device" error
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    networks:
      - cairabackend_zep-network
    volumes:
      - zep-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 100s
      timeout: 100s
      retries: 20
  nlp:
    image: ghcr.io/getzep/zep-nlp-server:latest
    container_name: zep-nlp
    env_file:
      - .env # You can set your embedding-related variables here
    restart: on-failure
    networks:
      - cairabackend_zep-network
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/5557' || exit 1
      interval: 100s
      timeout: 100s
      retries: 20
      start_period: 1800s
  zep:
    # image: ghcr.io/getzep/zep:latest
    image: gdrivechatbot.azurecr.io/customzep:latest
    container_name: zep
    restart: on-failure
    depends_on:
        db:
          condition: service_healthy
        nlp:
          condition: service_healthy
    ports:
        - "8000:8000"
    volumes:
      - ./config.yaml:/app/config.yaml
    environment:
      - ZEP_STORE_POSTGRES_DSN=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      - ZEP_NLP_SERVER_URL=http://nlp:5557
      - ZEP_EXTRACTORS_DOCUMENTS_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_DOCUMENTS_EMBEDDINGS_DIMENSIONS=1536
      - ZEP_EXTRACTORS_MESSAGES_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_MESSAGES_EMBEDDINGS_DIMENSIONS=1536
      - ZEP_EXTRACTORS_MESSAGES_SUMMARIZER_EMBEDDINGS_SERVICE=openai
      - ZEP_EXTRACTORS_MESSAGES_SUMMARIZER_EMBEDDINGS_DIMENSIONS=1536
    env_file:
      - .env # Store your OpenAI API key here as ZEP_OPENAI_API_KEY
    build:
      context: .
      dockerfile: Dockerfile
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8000' || exit 1
      interval: 100s
      timeout: 100s
      retries: 20
      start_period: 1800s
    networks:
      - cairabackend_zep-network
networks:
  cairabackend_zep-network:
    name: cairabackend_zep-network
    external: true
    driver: bridge
volumes:
  zep-db:
